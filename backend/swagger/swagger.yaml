swagger: '2.0'
info:
  title: Backend API
  version: 1.0.0
host: your-hostname.com
basePath: /
schemes:
  - https
paths:
  /users/login:
    post:
      summary: User Login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Successful login
          schema:
            type: object
            properties:
              _id:
                type: string
              email:
                type: string
              name:
                type: string
              image:
                type: string
              role:
                type: string
              money:
                type: number
              favouritesProducts:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /users/signup:
    post:
      summary: User Signup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Successful signup
          schema:
            type: object
            properties:
              _id:
                type: string
              email:
                type: string
              name:
                type: string
              image:
                type: string
              role:
                type: string
              money:
                type: number
              favouritesProducts:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
        '400':
          description: Invalid request
        '409':
          description: Email already in use
  /users/update:
    put:
      summary: Update User Profile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              avatar:
                type: string
              favourites:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
      responses:
        '200':
          description: User profile updated successfully
          schema:
            type: object
            properties:
              _id:
                type: string
              email:
                type: string
              name:
                type: string
              image:
                type: string
              role:
                type: string
              money:
                type: number
              favouritesProducts:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /users/favourites:
    get:
      summary: Get User's Favourite Products
      produces:
        - application/json
      responses:
        '200':
          description: Favourite products fetched successfully
          schema:
            type: array
            items:
              type: object
              properties:
                productId:
                  type: object
                  properties:
                    _id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                    category:
                      type: string
                    brand:
                      type: string
                    imageUrls:
                      type: array
                      items:
                        type: string
                    rating:
                      type: number
                    reviewsNumber:
                      type: number
                    unitsInStock:
                      type: number
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    __v:
                      type: number
                _id:
                  type: string
                quantity:
                  type: number
              
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /users/favourites/add:
    post:
      summary: Add Product to Favourites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              productId:
                type: string
      responses:
        '200':
          description: Product added to favourites successfully
          schema:
            type: object
            properties:
              _id:
                type: string
              email:
                type: string
              name:
                type: string
              image:
                type: string
              role:
                type: string
              money:
                type: number
              favouritesProducts:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: User not found or Product not found in favourites
  /users/favourites/remove:
    post:
      summary: Remove Product from Favourites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              productId:
                type: string
      responses:
        '200':
          description: Product removed from favourites successfully
          schema:
            type: object
            properties:
              _id:
                type: string
              email:
                type: string
              name:
                type: string
              image:
                type: string
              role:
                type: string
              money:
                type: number
              favouritesProducts:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: User not found or Product not found in favourites
  /users/change-role:
    patch:
      summary: Change User Role (Admin Only)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
              newRole:
                type: string
      responses:
        '200':
          description: User role changed successfully
          schema:
            type: object
            properties:
              _id:
                type: string
              email:
                type: string
              name:
                type: string
              image:
                type: string
              role:
                type: string
              money:
                type: number
              favouritesProducts:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: User not found